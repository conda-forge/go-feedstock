{% set name = "go" %}
{% set version = "1.13.10" %}

package:
  name: {{ name }}-{{ go_variant_str }}
  version: {{ version }}

source:
  - folder: go
    url: https://dl.google.com/{{ name }}/go{{ version }}.src.tar.gz
    sha256: eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c
    patches:
      # Please see https://github.com/sodre/go/pull/1 for details
      - patches/f-conda-integration.diff
      # Please see https://github.com/sodre/go/pull/2 for details
      - patches/i-nocgo-issue10607.diff

build:
  binary_relocation: False
  detect_binary_files_with_prefix: False
  force_ignore_keys:    # [win]
    - c_compiler        # [win]
    - cxx_compiler      # [win]
    - fortran_compiler  # [win]
  # test data links to these DSOs
  missing_dso_whitelist:
    - $RPATH/libc.so.6             # [linux and not cgo]
    - /usr/lib/libSystem.B.dylib   # [osx]
    - $SYSROOT\System32\winmm.dll  # [win]
  number: 0

requirements:
  run:
    - {{ pin_subpackage(name, exact=true) }}

test:
  commands:
    - go help

outputs:
  - name: {{ name }}
    script: {{ go_variant_str }}/build.sh   # [unix]
    script: {{ go_variant_str }}/build.bat  # [win]
    requirements:
      build:
        - {{ compiler('go14') }}

        - {{ compiler('c') }}        # [unix and cgo]
        - {{ compiler('cxx') }}      # [unix and cgo]
        - {{ compiler('fortran') }}  # [unix and cgo]
        - perl        # [unix]

        - {{ compiler('m2w64_c') }}        # [win and cgo]
        - {{ compiler('m2w64_cxx') }}      # [win and cgo]
        - {{ compiler('m2w64_fortran') }}  # [win and cgo]
      run:
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]
        - _go_select =={{ go_variant_ver }}={{ go_variant_str }}
      run_constrained:
        - {{ pin_compatible(compiler('c')) }}        # [unix and cgo]
        - {{ pin_compatible(compiler('cxx')) }}      # [unix and cgo]
        - {{ pin_compatible(compiler('fortran')) }}  # [unix and cgo]

        - {{ pin_compatible(compiler('m2w64_c')) }}        # [win and cgo]
        - {{ pin_compatible(compiler('m2w64_cxx')) }}      # [win and cgo]
        - {{ pin_compatible(compiler('m2w64_fortran')) }}  # [win and cgo]
    test:
      requires:
        - {{ compiler('c') }}  # [unix and cgo]
        - {{ compiler('m2w64_c') }}  # [win and cgo]
      script:  {{ go_variant_str }}/test.sh   # [unix]
      script:  {{ go_variant_str }}/test.bat  # [win]
    about:
      home: http://golang.org
      license: BSD-3-Clause
      license_family: BSD
      license_file: go/LICENSE
      summary: 'The Go Programming Language'

  - name: {{ name }}-{{ go_variant_str }}_{{ target_platform }}
    script: compiler/build.sh   # [unix]
    script: compiler/build.bat  # [win]
    requirements:
      run:
        - {{ pin_subpackage(name, exact=True) }}
    run_exports:  # [osx]
      strong:  # [osx]
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]
    test:
      script:  compiler/test.sh   # [unix]
      script:  compiler/test.bat  # [win]
      commands:
        # Environment checks
        - go env
    about:
      home: http://golang.org
      license: BSD-3-Clause
      license_family: BSD
      license_file: go/LICENSE
      summary: 'The Go ({{go_variant_str}}) compiler activation scripts for conda-build.'

about:
  home: http://golang.org
  license: BSD-3-Clause
  license_family: BSD
  license_file: go/LICENSE
  summary: 'The Go Programming Language ({{ go_variant_str }})'
  description: |
    Go is expressive, concise, clean, and efficient. Its concurrency mechanisms
    make it easy to write programs that get the most out of multicore and
    networked machines, while its novel type system enables flexible and
    modular program construction. Go compiles quickly to machine code yet has
    the convenience of garbage collection and the power of run-time reflection.
    It's a fast, statically typed, compiled language that feels like a
    dynamically typed, interpreted language.
  doc_url: https://golang.org/doc
  dev_url: https://go.googlesource.com/go

extra:
  recipe-maintainers:
    - nehaljwani
    - scopatz
    - sodre
    - stuarteberg
