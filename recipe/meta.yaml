{% set name = "go" %}
{% set version = "1.10.3" %}
{% set n = 'm2w64-' if win else '' %}
{% set sha256 = "567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://storage.googleapis.com/golang/go{{ version }}.src.tar.gz
    sha256: {{ sha256 }}
    folder: go
  - url: https://storage.googleapis.com/golang/go1.4-bootstrap-20170531.tar.gz
    sha256: 49f806f66762077861b7de7081f586995940772d29d4c45068c134441a743fa2
    folder: go-bootstrap

build:
  number: 2
  binary_relocation: False
  detect_binary_files_with_prefix: False
  force_ignore_keys:  # [win]
    - c_compiler      # [win]
    - cxx_compiler    # [win]

requirements:
  run:
    - {{ pin_subpackage(name.lower()+"_linux-64", exact=True) }}  # [linux]
    - {{ pin_subpackage(name.lower()+"_osx-64", exact=True) }}    # [osx]
    - {{ pin_subpackage(name.lower()+"_win-64", exact=True) }}    # [win]

test:
  commands:
    - go help
    - go version

outputs:
  - name: {{ name|lower }}-core
    script: build-core.sh   # [not win]
    script: build-core.bat  # [win]
    requirements:
      build:
        {% if not win %}
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('fortran') }}
        {% else %}
        - {{ n }}toolchain
        {% endif %}

        - perl 5.20.3.1  # [not win]
    test:
      files:
        - hello.go
      commands:
        - go env
        - go run hello.go
        - cmd /c echo x%GOROOT% NEQ x%CONDA_PREFIX%\go        # [win]
        - cmd /c if x%GOROOT% NEQ x%CONDA_PREFIX%\go exit 1   # [win]

  - name: {{ name|lower }}_{{ conda_goplatform }}
    script: build-platform.sh   # [not win]
    script: build-platform.bat  # [win]
    requirements:
      build:
        - sed      # [osx]
        - m2-sed   # [win]
        - m2-file  # [win]
        - m2-grep  # [win]
      host:
        - {{ pin_subpackage("go-core", exact=True) }}
      run:
        - {{ pin_subpackage("go-core", exact=True) }}
    test:
      files:
        - hello.go
      requires:
        - posix  # [win]
      commands:
        - go env
        - go build hello.go
        # Check that the file types match what is expected for each platform
        ## https://stackoverflow.com/questions/2768608/batch-equivalent-of-bash-backticks#2768660
        - file hello`go env GOEXE` | grep '{{ conda_gofile }}'  # [unix]
        - for /f "usebackq tokens=*" %%a in (`go env GOEXE`) do file hello%%a | grep '{{ conda_gofile }}'  # [win]


about:
  home: http://golang.org
  license: BSD-Style
  license_family: BSD
  license_file: go/LICENSE
  summary: 'The Go Programming Language'
  description: |
    Go is expressive, concise, clean, and efficient. Its concurrency mechanisms
    make it easy to write programs that get the most out of multicore and
    networked machines, while its novel type system enables flexible and
    modular program construction. Go compiles quickly to machine code yet has
    the convenience of garbage collection and the power of run-time reflection.
    It's a fast, statically typed, compiled language that feels like a
    dynamically typed, interpreted language.
  doc_url: https://golang.org/doc
  dev_url: https://go.googlesource.com/go

extra:
  recipe-maintainers:
    - nehaljwani
    - scopatz
    - sodre
