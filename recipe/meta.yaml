{% set name = "go" %}
{% set version = "1.14.1" %}
{% set llvm_ver = "10.0.0" %}  # [cgo]

package:
  name: {{ name }}-{{ go_variant_str }}
  version: {{ version }}

source:
  - folder: go
    url: https://dl.google.com/{{ name }}/go{{ version }}.src.tar.gz
    sha256: 2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676
    patches:
      # Please see patches/README.md for more details
      - patches/0001-Mark-CGO-tests-with-DependsOnCGO.patch
      - patches/0002-Disable-script_wait-test-on-windows.patch
      - patches/0003-Fix-cgo_fortran-test-setup-for-conda.patch
      - patches/0004-Add-CC-C-CPP-LD-FLAGS-to-script_test-extraEnvKeys.patch
      - patches/0005-Inherit-CGO_-environment-variables.patch
      - patches/0006-Add-conda-aware-default-values-for-GOPATH-and-GOBIN.patch
  - folder: go-bootstrap  # [aarch64 or ppc64le]
    url: https://dl.google.com/go/go1.11.13.linux-arm64.tar.gz                # [aarch64]
    sha256: e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593  # [aarch64]
    url: https://dl.google.com/go/go1.11.13.linux-ppc64le.tar.gz              # [ppc64le]
    sha256: ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca  # [ppc64le]
  - folder: compiler-rt  # [cgo]
    url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ llvm_ver }}/compiler-rt-{{ llvm_ver }}.src.tar.xz  # [cgo]
    sha256: 6a7da64d3a0a7320577b68b9ca4933bdcab676e898b759850e827333c3282c75  # [cgo]

build:
  binary_relocation: False
  detect_binary_files_with_prefix: False
  force_ignore_keys:    # [win]
    - c_compiler        # [win]
    - cxx_compiler      # [win]
    - fortran_compiler  # [win]
  # test data links to these DSOs
  missing_dso_whitelist:
    - $RPATH/libc.so.6             # [linux and not cgo]
    - /usr/lib/libSystem.B.dylib   # [osx]
    - $SYSROOT\System32\winmm.dll  # [win]
  number: 0
  skip: True  # [not (osx and not cgo)]

requirements:
  run:
    - {{ pin_subpackage(name, exact=true) }}
    - {{ compiler('c') }}  # [unix and cgo]
    - {{ compiler('m2w64_c') }}  # [win and cgo]

test:
  commands:
    - go help

outputs:
  - name: {{ name }}
    script: {{ go_variant_str }}/build.sh   # [unix]
    script: {{ go_variant_str }}/build.bat  # [win]
    requirements:
      build:
        - {{ compiler('go14') }}  # [not (aarch64 or ppc64le)]

        - {{ compiler('c') }}        # [unix and cgo]
        - {{ compiler('cxx') }}      # [unix and cgo]
        - {{ compiler('fortran') }}  # [unix and cgo]

        - {{ compiler('m2w64_c') }}        # [win and cgo]
        - {{ compiler('m2w64_cxx') }}      # [win and cgo]
        - {{ compiler('m2w64_fortran') }}  # [win and cgo]
      run:
        - _go_select =={{ go_variant_ver }}={{ go_variant_str }}
      run_constrained:
        # TODO: Move to run section once conda/conda#9845 is fixed
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]

        - {{ pin_compatible(compiler('c')) }}        # [unix and cgo]
        - {{ pin_compatible(compiler('cxx')) }}      # [unix and cgo]
        - {{ pin_compatible(compiler('fortran')) }}  # [unix and cgo]

        - {{ pin_compatible(compiler('m2w64_c')) }}        # [win and cgo]
        - {{ pin_compatible(compiler('m2w64_cxx')) }}      # [win and cgo]
        - {{ pin_compatible(compiler('m2w64_fortran')) }}  # [win and cgo]
    test:
      requires:
        - {{ compiler('c') }}        # [unix and cgo]
        - {{ compiler('m2w64_c') }}  # [win and cgo]
        - git  # [linux]
        - perl
      script:  {{ go_variant_str }}/test.sh   # [unix]
      script:  {{ go_variant_str }}/test.bat  # [win]
    about:
      home: http://golang.org
      license: BSD-3-Clause
      license_family: BSD
      license_file: go/LICENSE
      summary: 'The Go Programming Language'

  - name: {{ name }}-{{ go_variant_str }}_{{ target_platform }}
    script: compiler/build.sh   # [unix]
    script: compiler/build.bat  # [win]
    requirements:
      run:
        - {{ pin_subpackage(name, exact=True) }}
    #TODO: Re-enable once conda/conda#9845 if fixed.
    #run_exports:                                  # [osx]
    #  strong:                                     # [osx]
    #    - __osx >={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]
    test:
      script:  compiler/test.sh   # [unix]
      script:  compiler/test.bat  # [win]
    about:
      home: http://golang.org
      license: BSD-3-Clause
      license_family: BSD
      license_file: go/LICENSE
      summary: 'The Go ({{ go_variant_str }}) compiler activation scripts for conda-build.'
      description: |
          This package enables the CONDA_GO_COMPILER environment variable. 
          This variable is used by conda-forge's patched GoLang compiler to 
          set conda-aware GOBIN and GOPATH default values. These default 
          values are ignored if GOBIN and GOPATH environment variables 
          are set independently by the user.

          For more details, please see the go-feedstock recipe.
      dev_url: https://github.com/conda-forge/go-feedstock

about:
  home: http://golang.org
  license: BSD-3-Clause
  license_family: BSD
  license_file: go/LICENSE
  summary: 'The Go Programming Language ({{ go_variant_str }})'
  description: |
    Go is expressive, concise, clean, and efficient. Its concurrency mechanisms
    make it easy to write programs that get the most out of multicore and
    networked machines, while its novel type system enables flexible and
    modular program construction. Go compiles quickly to machine code yet has
    the convenience of garbage collection and the power of run-time reflection.
    It's a fast, statically typed, compiled language that feels like a
    dynamically typed, interpreted language.
  doc_url: https://golang.org/doc
  dev_url: https://go.googlesource.com/go

extra:
  recipe-maintainers:
    - nehaljwani
    - scopatz
    - sodre
    - stuarteberg
